/*
    무조건 4명이 경기함
    0번이 2등안에 선택될 확률 구하기

    1. 이김, 무승부, 짐 모든 경우 구하기
    2. 0번이 2위 안에 드는지 점수로 확인하기
    3. 0이 2등 안에 든다면 확률 구하기
*/

import java.io.*;
import java.util.*;

public class Main {
    
    public static int[][] pos = new int[][]{{0,1},{0,2},{0,3},{1,2},{1,3},{2,3}};
    public static int[][] result = new int[4][4];
    public static double answer = 0.0;
    public static int[] f = new int[4];
    public static void main(String[] args) throws IOException{
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        StringTokenizer st = new StringTokenizer(br.readLine());
        
        for(int i=0;i<4;i++){
            f[i] = Integer.parseInt(st.nextToken());
        }

        match(0);

        System.out.printf("%.3f", answer * 100);
        
    }
    public static void match(int depth){
        if(depth == 6){
            // 0번이 2등안에 들어가는지 확인하기
            if(check()){
                calcProbability();
            }
            return;
        }

        int ru1 = pos[depth][0];
        int ru2 = pos[depth][1];

        for(int i=-1;i<=1;i++){   // 경기 결과 점수

            // 한쪽이 이기면(1) 한쪽이 져야(-1)함, 무승부 : 0
            result[ru1][ru2] = i; 
            result[ru2][ru1] = -i;
            
            match(depth+1);
        }
    }
    public static void calcProbability(){  // 확률 구하기
        double product = 1;

        for(int i=0;i<4;i++){
            for(int j=i+1;j<4;j++){
                product *= formula((double)f[i],(double)f[j],result[i][j]);
            }
        }

        answer += product;
    }
    public static double formula(double fi, double fj, int status){

        switch(status){
            case 1: return (4.0 * fi) / (5.0*fi + 5.0*fj);
            case -1: return (4.0 * fj) / (5.0*fi + 5.0*fj);
            case 0: return (fi + fj) / (5.0*fi + 5.0*fj); 
        }
        return 0;
    }
    public static boolean check(){  // 2위 안에 드는지 점수 내기
        int[] scores = new int[4];
        for(int i=0;i<4;i++){
            for(int j=0;j<4;j++){
                if(i==j)continue;
                scores[i] += result[i][j] == 1? 3 : result[i][j] == 0 ? 1 : 0;
            }
        }

        int cnt = 0;
        for(int i=1;i<4;i++){
            if(scores[0]>=scores[i])cnt++;
        }
        if(cnt >= 2)return true;
        return false;
    }
}
